/**
 * API Pago Facil
 * API de Pago FÃ¡cil
 *
 * The version of the OpenAPI document: 2.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiPagoFacil);
  }
}(this, function(expect, ApiPagoFacil) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiPagoFacil.InlineResponse2003Data();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse2003Data', function() {
    it('should create an instance of InlineResponse2003Data', function() {
      // uncomment below and update the code to test InlineResponse2003Data
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be.a(ApiPagoFacil.InlineResponse2003Data);
    });

    it('should have the property idTrx (base name: "idTrx")', function() {
      // uncomment below and update the code to test the property idTrx
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property idService (base name: "idService")', function() {
      // uncomment below and update the code to test the property idService
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property orderIdTienda (base name: "orderIdTienda")', function() {
      // uncomment below and update the code to test the property orderIdTienda
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property authCode (base name: "authCode")', function() {
      // uncomment below and update the code to test the property authCode
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property callbackURL (base name: "callbackURL")', function() {
      // uncomment below and update the code to test the property callbackURL
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property completeURL (base name: "completeURL")', function() {
      // uncomment below and update the code to test the property completeURL
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property cancelURL (base name: "cancelURL")', function() {
      // uncomment below and update the code to test the property cancelURL
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property browserData (base name: "browserData")', function() {
      // uncomment below and update the code to test the property browserData
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property paymentTypeCode (base name: "paymentTypeCode")', function() {
      // uncomment below and update the code to test the property paymentTypeCode
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property sharesNumber (base name: "sharesNumber")', function() {
      // uncomment below and update the code to test the property sharesNumber
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property responceCode (base name: "responceCode")', function() {
      // uncomment below and update the code to test the property responceCode
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property vci (base name: "vci")', function() {
      // uncomment below and update the code to test the property vci
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property abonos (base name: "abonos")', function() {
      // uncomment below and update the code to test the property abonos
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new ApiPagoFacil.InlineResponse2003Data();
      //expect(instance).to.be();
    });

  });

}));
