/**
 * API Pago Facil
 * API de Pago Fácil
 *
 * The version of the OpenAPI document: 2.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineResponse200 from '../model/InlineResponse200';
import InlineResponse400 from '../model/InlineResponse400';
import InlineResponse403 from '../model/InlineResponse403';
import InlineResponse404 from '../model/InlineResponse404';

/**
* Indicators service.
* @module api/IndicatorsApi
* @version 2.1.4
*/
export default class IndicatorsApi {

    /**
    * Constructs a new IndicatorsApi. 
    * @alias module:api/IndicatorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the indicatorsRemittancesGet operation.
     * @callback module:api/IndicatorsApi~indicatorsRemittancesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtiene los datos de los abonos (remittances) realizados en una fecha específica y los futuros, además del saldo disponible
     * 1.-Requiere el uso del Token rescatado en el LOGIN (autorización heredada) <br> 2.-Se debe configurar los parámetros como \"Query Params\" <br> 3.-Solo los usuarios Administradores pueden obtener información etregando el parámetros \"IdUser\". Para usuarios no Administradores este parámetro no se informa y siempre retronará información del usuario logado. 4.-Se debe informar alguno de los parámetros, de lo contrario la API responde con un error <br>     -Setear en true or false los parámetros \"availableBalance\" o \"futureRemittances\" <br>     -Entregar una fecha en el parámetro \"remittanceByDate\"<br>     
     * @param {Object} opts Optional parameters
     * @param {Number} opts.idUser ID del usuario a consultar
     * @param {Number} opts.idTrx ID de la transacción a consultar
     * @param {Boolean} opts.availableBalance Define si se desea obtener el saldo disponible del usuario
     * @param {Date} opts.remittanceByDate Fecha de la que se desea obtener información del abono
     * @param {Boolean} opts.futureRemittances Define si se desea obtener los abonos futuros
     * @param {module:api/IndicatorsApi~indicatorsRemittancesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    indicatorsRemittancesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'idUser': opts['idUser'],
        'idTrx': opts['idTrx'],
        'availableBalance': opts['availableBalance'],
        'remittanceByDate': opts['remittanceByDate'],
        'futureRemittances': opts['futureRemittances']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['JWTToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/indicators/remittances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
